type UserHttp {
    id: String!
    email: String!
    password: String!
    role: Int!
    nickname: String!
    firstname: String!
    lastname: String!
    middlename: String!
    createdAt: Timestamp!
}

input UpdateProfileInput {
    id: String!
    email: String!
    nickname: String!
    firstname: String!
    lastname: String!
    middlename: String!
}

type SuperAdminHttp {
    userHttp: UserHttp!
}

union SuperAdminResult = SuperAdminHttp | Error


union GetUserResult = StudentHttp | ParentHttp | TeacherHttp | UnitAdminHttp | SuperAdminHttp

type Mutation {
    UpdateSuperAdmin(input: UpdateProfileInput!): SuperAdminResult!
}

type Query {
     GetSuperAdminById(superAdminId: String!): SuperAdminResult!
     GetUser(peekUserId: String, peekUserRole: Int): GetUserResult!
}

scalar Timestamp
